/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Dialog;

import Modelos.FileManager;
import Modelos.Reserva;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.sql.Date;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author rocio
 */
public class ReservaDialog extends javax.swing.JDialog {

    
    private JTextField idFuncionField;
    private JTextField idClienteField;
    private JTextField numAsientosField;
    private JTextField fechaReservaField;
    private JButton guardarButton;
    private JButton salirButton;

    /**
     * Creates new form FormularioForm
     */
    public ReservaDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initCustomComponents();
    }

    private void initCustomComponents() {
        setTitle("Registrar Reserva");
        setSize(400, 250);  // Tamaño del JDialog
        setLocationRelativeTo(null);  // Centrar la ventana
        setLayout(new GridLayout(5, 2)); // con 5 filas y 2 columnas

        // Crear los campos y botones
        idFuncionField = new JTextField();
        idClienteField = new JTextField();
        numAsientosField = new JTextField();
        fechaReservaField = new JTextField("YYYY-MM-DD"); 
        guardarButton = new JButton("Guardar");
        salirButton = new JButton("Salir");

        // Añadir los componentes
        add(new JLabel("ID Función:"));
        add(idFuncionField);

        add(new JLabel("ID Cliente:"));
        add(idClienteField);

        add(new JLabel("Número de Asientos:"));
        add(numAsientosField);

        add(new JLabel("Fecha Reserva (YYYY-MM-DD):"));
        add(fechaReservaField);

        add(new JLabel());  
        add(guardarButton);  
        
        add(new JLabel());  
        add(salirButton);   // Boton de salir
        
        guardarButton.addActionListener(this::guardarReserva);
        salirButton.addActionListener(this::salirFormulario);
    }

    private void guardarReserva(ActionEvent e) {
        try {
          // contorlar que los datos sean correctos 
            int idFuncion = Integer.parseInt(idFuncionField.getText());
            int idCliente = Integer.parseInt(idClienteField.getText());
            int numAsientos = Integer.parseInt(numAsientosField.getText());
            Date fechaReserva = Date.valueOf(fechaReservaField.getText());

            // Crear la reserva
            Reserva reserva = new Reserva(idFuncion, idCliente, numAsientos, fechaReserva);

            // Guardar la reserva
            FileManager.guardarReserva(reserva, "reservas.txt");
            JOptionPane.showMessageDialog(this, "Reserva guardada ");
            dispose();  // cierro ventana después de pulsarr x
        } catch (Exception ex) {
            // Mostrar mensaje de error 
            JOptionPane.showMessageDialog(this, "Error al guardar la reserva");
        }
    }

    private void salirFormulario(ActionEvent e) {
        dispose();  // Cerrar el formulario y volver a la ventana anterior
    }

    // controlar los datos antes de guardar
    private boolean controlarCampos() {
        // controlar que todos los huecos esten llenos
        if (idFuncionField.getText().isEmpty() || idClienteField.getText().isEmpty() || numAsientosField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar rellenos");
            return false;
        }

        // controlar que el id sean numeros
        try {
            Integer.parseInt(idFuncionField.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El id de funcion no puede contener letras.");
            return false;
        }

        // controlar que el numero de asiento sea un numero
        try {
            Integer.parseInt(numAsientosField.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El numero de asientos no puede contener letras.");
            return false;
        }

        // contorlar que la fecha sea en el formato correcto (YYYY-MM-DD)
        try {
            Date.valueOf(fechaReservaField.getText());  
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "La fecha debe estar en el formato año, mes y día.");
            return false;
        }

        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservaDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ReservaDialog dialog = new ReservaDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
